{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\stuth\\\\OneDrive\\\\Desktop\\\\WELLSENSE\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { BrowserRouter as Router, Routes, Route, Navigate } from \"react-router-dom\";\nimport Login from \"./pages/Login\";\nimport Dashboard from \"./pages/Dashboard\";\nimport PatientPage from \"./pages/PatientPage\";\nimport LoadingScreen from \"./components/LoadingScreen\"; // Import your LoadingScreen\nimport \"./styles.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\n  const [isLoading, setIsLoading] = useState(false);\n  const handleLogin = () => {\n    setIsAuthenticated(true);\n    setIsLoading(true);\n    // Simulate loading delay before showing Dashboard (e.g., 3 seconds)\n    setTimeout(() => {\n      setIsLoading(false);\n    }, 3000);\n  };\n  const handleLogout = () => {\n    setIsAuthenticated(false);\n  };\n  return /*#__PURE__*/_jsxDEV(Router, {\n    children: /*#__PURE__*/_jsxDEV(Routes, {\n      children: [/*#__PURE__*/_jsxDEV(Route, {\n        path: \"/\",\n        element: /*#__PURE__*/_jsxDEV(Login, {\n          onLogin: handleLogin\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 34\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/dashboard\",\n        element: isAuthenticated ? isLoading ? /*#__PURE__*/_jsxDEV(LoadingScreen, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 28\n        }, this) : /*#__PURE__*/_jsxDEV(Dashboard, {\n          onLogout: handleLogout\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 48\n        }, this) : /*#__PURE__*/_jsxDEV(Navigate, {\n          to: \"/\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/patients\",\n        element: isAuthenticated ? /*#__PURE__*/_jsxDEV(PatientPage, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 38\n        }, this) : /*#__PURE__*/_jsxDEV(Navigate, {\n          to: \"/\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 56\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"4VKZY8NyHipcbKjtHRh/s3xX/TA=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","BrowserRouter","Router","Routes","Route","Navigate","Login","Dashboard","PatientPage","LoadingScreen","jsxDEV","_jsxDEV","App","_s","isAuthenticated","setIsAuthenticated","isLoading","setIsLoading","handleLogin","setTimeout","handleLogout","children","path","element","onLogin","fileName","_jsxFileName","lineNumber","columnNumber","onLogout","to","_c","$RefreshReg$"],"sources":["C:/Users/stuth/OneDrive/Desktop/WELLSENSE/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { BrowserRouter as Router, Routes, Route, Navigate } from \"react-router-dom\";\r\nimport Login from \"./pages/Login\";\r\nimport Dashboard from \"./pages/Dashboard\";\r\nimport PatientPage from \"./pages/PatientPage\";\r\nimport LoadingScreen from \"./components/LoadingScreen\"; // Import your LoadingScreen\r\nimport \"./styles.css\";\r\n\r\nfunction App() {\r\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n\r\n  const handleLogin = () => {\r\n    setIsAuthenticated(true);\r\n    setIsLoading(true);\r\n    // Simulate loading delay before showing Dashboard (e.g., 3 seconds)\r\n    setTimeout(() => {\r\n      setIsLoading(false);\r\n    }, 3000);\r\n  };\r\n\r\n  const handleLogout = () => {\r\n    setIsAuthenticated(false);\r\n  };\r\n\r\n  return (\r\n    <Router>\r\n      <Routes>\r\n        <Route path=\"/\" element={<Login onLogin={handleLogin} />} />\r\n        <Route \r\n          path=\"/dashboard\" \r\n          element={\r\n            isAuthenticated ? \r\n              (isLoading ? <LoadingScreen /> : <Dashboard onLogout={handleLogout} />)\r\n              : <Navigate to=\"/\" />\r\n          } \r\n        />\r\n        <Route \r\n          path=\"/patients\" \r\n          element={isAuthenticated ? <PatientPage /> : <Navigate to=\"/\" />} \r\n        />\r\n      </Routes>\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default App;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,aAAa,IAAIC,MAAM,EAAEC,MAAM,EAAEC,KAAK,EAAEC,QAAQ,QAAQ,kBAAkB;AACnF,OAAOC,KAAK,MAAM,eAAe;AACjC,OAAOC,SAAS,MAAM,mBAAmB;AACzC,OAAOC,WAAW,MAAM,qBAAqB;AAC7C,OAAOC,aAAa,MAAM,4BAA4B,CAAC,CAAC;AACxD,OAAO,cAAc;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEtB,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,eAAe,EAAEC,kBAAkB,CAAC,GAAGhB,QAAQ,CAAC,KAAK,CAAC;EAC7D,MAAM,CAACiB,SAAS,EAAEC,YAAY,CAAC,GAAGlB,QAAQ,CAAC,KAAK,CAAC;EAEjD,MAAMmB,WAAW,GAAGA,CAAA,KAAM;IACxBH,kBAAkB,CAAC,IAAI,CAAC;IACxBE,YAAY,CAAC,IAAI,CAAC;IAClB;IACAE,UAAU,CAAC,MAAM;MACfF,YAAY,CAAC,KAAK,CAAC;IACrB,CAAC,EAAE,IAAI,CAAC;EACV,CAAC;EAED,MAAMG,YAAY,GAAGA,CAAA,KAAM;IACzBL,kBAAkB,CAAC,KAAK,CAAC;EAC3B,CAAC;EAED,oBACEJ,OAAA,CAACT,MAAM;IAAAmB,QAAA,eACLV,OAAA,CAACR,MAAM;MAAAkB,QAAA,gBACLV,OAAA,CAACP,KAAK;QAACkB,IAAI,EAAC,GAAG;QAACC,OAAO,eAAEZ,OAAA,CAACL,KAAK;UAACkB,OAAO,EAAEN;QAAY;UAAAO,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE;MAAE;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eAC5DjB,OAAA,CAACP,KAAK;QACJkB,IAAI,EAAC,YAAY;QACjBC,OAAO,EACLT,eAAe,GACZE,SAAS,gBAAGL,OAAA,CAACF,aAAa;UAAAgB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,gBAAGjB,OAAA,CAACJ,SAAS;UAACsB,QAAQ,EAAET;QAAa;UAAAK,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,gBACpEjB,OAAA,CAACN,QAAQ;UAACyB,EAAE,EAAC;QAAG;UAAAL,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE;MACvB;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACF,CAAC,eACFjB,OAAA,CAACP,KAAK;QACJkB,IAAI,EAAC,WAAW;QAChBC,OAAO,EAAET,eAAe,gBAAGH,OAAA,CAACH,WAAW;UAAAiB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,gBAAGjB,OAAA,CAACN,QAAQ;UAACyB,EAAE,EAAC;QAAG;UAAAL,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE;MAAE;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAClE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACI;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEb;AAACf,EAAA,CApCQD,GAAG;AAAAmB,EAAA,GAAHnB,GAAG;AAsCZ,eAAeA,GAAG;AAAC,IAAAmB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}