{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\stuth\\\\OneDrive\\\\Desktop\\\\WELLSENSE\\\\FRONTEND\\\\src\\\\components\\\\PulseChart.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { Line } from \"react-chartjs-2\";\nimport io from \"socket.io-client\";\nimport { Chart as ChartJS, CategoryScale, LinearScale, PointElement, LineElement, Title, Tooltip, Legend } from \"chart.js\";\n\n// Register Chart.js components\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nChartJS.register(CategoryScale, LinearScale, PointElement, LineElement, Title, Tooltip, Legend);\n\n// Establish socket connection\nconst socket = io(\"http://192.168.1.13:8000\");\nfunction PulseChart({\n  patientId\n}) {\n  _s();\n  const [dataPoints, setDataPoints] = useState([]);\n  useEffect(() => {\n    socket.on(\"pulseData\", data => {\n      // Check if the data corresponds to the patient\n      if (data.patientId === patientId) {\n        setDataPoints(prev => {\n          const newData = [...prev, data.pulse];\n          if (newData.length > 20) newData.shift(); // Keep last 20 readings\n          return newData;\n        });\n      }\n    });\n    return () => {\n      socket.off(\"pulseData\");\n    };\n  }, [patientId]); // Depend on patientId for filtering\n\n  const chartData = {\n    labels: dataPoints.map((_, i) => i),\n    datasets: [{\n      label: \"Pulse Rate\",\n      data: dataPoints,\n      borderColor: \"rgba(255,0,0,1)\",\n      backgroundColor: \"rgba(255,0,0,0.2)\",\n      tension: 0.1\n    }]\n  };\n  const chartOptions = {\n    responsive: true,\n    maintainAspectRatio: false\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"pulse-chart\",\n    children: /*#__PURE__*/_jsxDEV(Line, {\n      data: chartData,\n      options: chartOptions\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 5\n  }, this);\n}\n_s(PulseChart, \"qRpGS+bHs3FuyierivgjJmi/irI=\");\n_c = PulseChart;\nexport default PulseChart;\nvar _c;\n$RefreshReg$(_c, \"PulseChart\");","map":{"version":3,"names":["React","useEffect","useState","Line","io","Chart","ChartJS","CategoryScale","LinearScale","PointElement","LineElement","Title","Tooltip","Legend","jsxDEV","_jsxDEV","register","socket","PulseChart","patientId","_s","dataPoints","setDataPoints","on","data","prev","newData","pulse","length","shift","off","chartData","labels","map","_","i","datasets","label","borderColor","backgroundColor","tension","chartOptions","responsive","maintainAspectRatio","className","children","options","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/stuth/OneDrive/Desktop/WELLSENSE/FRONTEND/src/components/PulseChart.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { Line } from \"react-chartjs-2\";\r\nimport io from \"socket.io-client\";\r\nimport {\r\n  Chart as ChartJS,\r\n  CategoryScale,\r\n  LinearScale,\r\n  PointElement,\r\n  LineElement,\r\n  Title,\r\n  Tooltip,\r\n  Legend,\r\n} from \"chart.js\";\r\n\r\n// Register Chart.js components\r\nChartJS.register(\r\n  CategoryScale,\r\n  LinearScale,\r\n  PointElement,\r\n  LineElement,\r\n  Title,\r\n  Tooltip,\r\n  Legend\r\n);\r\n\r\n// Establish socket connection\r\nconst socket = io(\"http://192.168.1.13:8000\");\r\n\r\nfunction PulseChart({ patientId }) {\r\n  const [dataPoints, setDataPoints] = useState([]);\r\n\r\n  useEffect(() => {\r\n    socket.on(\"pulseData\", (data) => {\r\n      // Check if the data corresponds to the patient\r\n      if (data.patientId === patientId) {\r\n        setDataPoints((prev) => {\r\n          const newData = [...prev, data.pulse];\r\n          if (newData.length > 20) newData.shift(); // Keep last 20 readings\r\n          return newData;\r\n        });\r\n      }\r\n    });\r\n\r\n    return () => {\r\n      socket.off(\"pulseData\");\r\n    };\r\n  }, [patientId]); // Depend on patientId for filtering\r\n\r\n  const chartData = {\r\n    labels: dataPoints.map((_, i) => i),\r\n    datasets: [\r\n      {\r\n        label: \"Pulse Rate\",\r\n        data: dataPoints,\r\n        borderColor: \"rgba(255,0,0,1)\",\r\n        backgroundColor: \"rgba(255,0,0,0.2)\",\r\n        tension: 0.1,\r\n      },\r\n    ],\r\n  };\r\n\r\n  const chartOptions = {\r\n    responsive: true,\r\n    maintainAspectRatio: false,\r\n  };\r\n\r\n  return (\r\n    <div className=\"pulse-chart\">\r\n      <Line data={chartData} options={chartOptions} />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default PulseChart;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,IAAI,QAAQ,iBAAiB;AACtC,OAAOC,EAAE,MAAM,kBAAkB;AACjC,SACEC,KAAK,IAAIC,OAAO,EAChBC,aAAa,EACbC,WAAW,EACXC,YAAY,EACZC,WAAW,EACXC,KAAK,EACLC,OAAO,EACPC,MAAM,QACD,UAAU;;AAEjB;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACAT,OAAO,CAACU,QAAQ,CACdT,aAAa,EACbC,WAAW,EACXC,YAAY,EACZC,WAAW,EACXC,KAAK,EACLC,OAAO,EACPC,MACF,CAAC;;AAED;AACA,MAAMI,MAAM,GAAGb,EAAE,CAAC,0BAA0B,CAAC;AAE7C,SAASc,UAAUA,CAAC;EAAEC;AAAU,CAAC,EAAE;EAAAC,EAAA;EACjC,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGpB,QAAQ,CAAC,EAAE,CAAC;EAEhDD,SAAS,CAAC,MAAM;IACdgB,MAAM,CAACM,EAAE,CAAC,WAAW,EAAGC,IAAI,IAAK;MAC/B;MACA,IAAIA,IAAI,CAACL,SAAS,KAAKA,SAAS,EAAE;QAChCG,aAAa,CAAEG,IAAI,IAAK;UACtB,MAAMC,OAAO,GAAG,CAAC,GAAGD,IAAI,EAAED,IAAI,CAACG,KAAK,CAAC;UACrC,IAAID,OAAO,CAACE,MAAM,GAAG,EAAE,EAAEF,OAAO,CAACG,KAAK,CAAC,CAAC,CAAC,CAAC;UAC1C,OAAOH,OAAO;QAChB,CAAC,CAAC;MACJ;IACF,CAAC,CAAC;IAEF,OAAO,MAAM;MACXT,MAAM,CAACa,GAAG,CAAC,WAAW,CAAC;IACzB,CAAC;EACH,CAAC,EAAE,CAACX,SAAS,CAAC,CAAC,CAAC,CAAC;;EAEjB,MAAMY,SAAS,GAAG;IAChBC,MAAM,EAAEX,UAAU,CAACY,GAAG,CAAC,CAACC,CAAC,EAAEC,CAAC,KAAKA,CAAC,CAAC;IACnCC,QAAQ,EAAE,CACR;MACEC,KAAK,EAAE,YAAY;MACnBb,IAAI,EAAEH,UAAU;MAChBiB,WAAW,EAAE,iBAAiB;MAC9BC,eAAe,EAAE,mBAAmB;MACpCC,OAAO,EAAE;IACX,CAAC;EAEL,CAAC;EAED,MAAMC,YAAY,GAAG;IACnBC,UAAU,EAAE,IAAI;IAChBC,mBAAmB,EAAE;EACvB,CAAC;EAED,oBACE5B,OAAA;IAAK6B,SAAS,EAAC,aAAa;IAAAC,QAAA,eAC1B9B,OAAA,CAACZ,IAAI;MAACqB,IAAI,EAAEO,SAAU;MAACe,OAAO,EAAEL;IAAa;MAAAM,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC7C,CAAC;AAEV;AAAC9B,EAAA,CA3CQF,UAAU;AAAAiC,EAAA,GAAVjC,UAAU;AA6CnB,eAAeA,UAAU;AAAC,IAAAiC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}