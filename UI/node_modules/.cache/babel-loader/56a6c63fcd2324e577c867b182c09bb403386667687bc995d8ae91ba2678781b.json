{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\stuth\\\\OneDrive\\\\Desktop\\\\WELLSENSE\\\\FRONTEND\\\\src\\\\components\\\\LoadingScreen.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect } from \"react\";\nimport logo from \"../assets/logo.png\";\nimport \"../styles.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction LoadingScreen({\n  onLoaded\n}) {\n  _s();\n  // When component mounts, wait for 3 seconds (animation duration) then call onLoaded.\n  useEffect(() => {\n    const timer = setTimeout(() => {\n      onLoaded();\n    }, 3000); // 3 seconds\n    return () => clearTimeout(timer);\n  }, [onLoaded]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"loading-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"img\", {\n      src: logo,\n      alt: \"WELLSENSE Logo\",\n      className: \"loading-logo\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"loading-bar-container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"loading-bar\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"tagline\",\n      children: \"Connecting Patients and Care, Anytime, Anywhere\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 5\n  }, this);\n}\n_s(LoadingScreen, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n_c = LoadingScreen;\nexport default LoadingScreen;\nvar _c;\n$RefreshReg$(_c, \"LoadingScreen\");","map":{"version":3,"names":["React","useEffect","logo","jsxDEV","_jsxDEV","LoadingScreen","onLoaded","_s","timer","setTimeout","clearTimeout","className","children","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/stuth/OneDrive/Desktop/WELLSENSE/FRONTEND/src/components/LoadingScreen.js"],"sourcesContent":["import React, { useEffect } from \"react\";\r\nimport logo from \"../assets/logo.png\";\r\nimport \"../styles.css\";\r\n\r\nfunction LoadingScreen({ onLoaded }) {\r\n  // When component mounts, wait for 3 seconds (animation duration) then call onLoaded.\r\n  useEffect(() => {\r\n    const timer = setTimeout(() => {\r\n      onLoaded();\r\n    }, 3000); // 3 seconds\r\n    return () => clearTimeout(timer);\r\n  }, [onLoaded]);\r\n\r\n  return (\r\n    <div className=\"loading-container\">\r\n      <img src={logo} alt=\"WELLSENSE Logo\" className=\"loading-logo\" />\r\n      <div className=\"loading-bar-container\">\r\n        <div className=\"loading-bar\"></div>\r\n      </div>\r\n      <div className=\"tagline\">\r\n        Connecting Patients and Care, Anytime, Anywhere\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default LoadingScreen;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,QAAQ,OAAO;AACxC,OAAOC,IAAI,MAAM,oBAAoB;AACrC,OAAO,eAAe;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEvB,SAASC,aAAaA,CAAC;EAAEC;AAAS,CAAC,EAAE;EAAAC,EAAA;EACnC;EACAN,SAAS,CAAC,MAAM;IACd,MAAMO,KAAK,GAAGC,UAAU,CAAC,MAAM;MAC7BH,QAAQ,CAAC,CAAC;IACZ,CAAC,EAAE,IAAI,CAAC,CAAC,CAAC;IACV,OAAO,MAAMI,YAAY,CAACF,KAAK,CAAC;EAClC,CAAC,EAAE,CAACF,QAAQ,CAAC,CAAC;EAEd,oBACEF,OAAA;IAAKO,SAAS,EAAC,mBAAmB;IAAAC,QAAA,gBAChCR,OAAA;MAAKS,GAAG,EAAEX,IAAK;MAACY,GAAG,EAAC,gBAAgB;MAACH,SAAS,EAAC;IAAc;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAChEd,OAAA;MAAKO,SAAS,EAAC,uBAAuB;MAAAC,QAAA,eACpCR,OAAA;QAAKO,SAAS,EAAC;MAAa;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAChC,CAAC,eACNd,OAAA;MAAKO,SAAS,EAAC,SAAS;MAAAC,QAAA,EAAC;IAEzB;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV;AAACX,EAAA,CApBQF,aAAa;AAAAc,EAAA,GAAbd,aAAa;AAsBtB,eAAeA,aAAa;AAAC,IAAAc,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}